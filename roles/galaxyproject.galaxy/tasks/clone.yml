---
# Manage Galaxy clone

- name: Check for Galaxy
  stat:
    path: "{{ galaxy_server_dir }}/lib/galaxy"
  register: galaxy_stat_out

# Example just ensuring the repo checkout exists
- name: Get current Galaxy commit id
  git:
    repo: "{{ galaxy_repo }}"
    dest: "{{ galaxy_server_dir }}"
    update: no
  register: current_repo_state

- name: Report current Galaxy commit id
  debug:
    msg: "Current version of {{ galaxy_server_dir }} {{ current_repo_state.before }} does not match playbook version {{ galaxy_commit_id }}"
  when: galaxy_stat_out.stat.exists and (current_repo_state.before != galaxy_commit_id)

- name: Update Galaxy to correct ref (git)
  git:
    dest: "{{ galaxy_server_dir }}"
    force: "{{ galaxy_force_checkout }}"
    repo: "{{ galaxy_repo }}"
    version: "{{ galaxy_commit_id }}"
    executable: "{{ git_executable | default(omit) }}"
  notify:
    - restart galaxy

- name: Include virtualenv setup tasks
  include_tasks: virtualenv.yml

- name: Remove orphaned .pyc files and compile bytecode
  script: makepyc.py {{ galaxy_server_dir }}/lib
  environment:
    PATH: "{{ galaxy_venv_dir }}/bin"
