---
- name: Check for bashrc
  stat:
    path: "{{ galaxy_user.home }}/.bashrc"
  register: bashrc_stat_out

- name: Copy default bashrc when not existing
  copy:
    src: /etc/skel/.bashrc
    dest: "{{ galaxy_user.home }}/.bashrc"
    remote_src: yes
    mode: 0640
    owner: "{{ galaxy_user.name }}"
    group: "{{ galaxy_group.name | default(galaxy_group) }}"
  when: not bashrc_stat_out.stat.exists

- name: Check for bashprofile
  stat:
    path: "{{ galaxy_user.home }}/.bash_profile"
  register: bashprofile_stat_out

- name: Check for profile
  stat:
    path: "{{ galaxy_user.home }}/.profile"
  register: profile_stat_out

- name: Copy default bashprofile when not existing
  copy:
    src: /etc/skel/.bash_profile
    dest: "{{ galaxy_user.home }}/.bash_profile"
    remote_src: yes
    mode: 0640
    owner: "{{ galaxy_user.name }}"
    group: "{{ galaxy_group.name | default(galaxy_group) }}"
  when: not bashprofile_stat_out.stat.exists and not profile_stat_out.stat.exists

- name: Insert some aliases
  blockinfile:
    path: "{{ galaxy_user.home }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    content: |
      # User specific aliases and functions
      alias gl='journalctl  -f -u galaxy-*'
      alias glh='journalctl -f -u galaxy-handler@*'
      alias glz='journalctl -f -u galaxy-zergpool -u galaxy-zergling@* | grep -v "/api/histories"'
      alias glw='journalctl -f -u galaxy-workflow-scheduler@*'
      alias cu="sudo awk '{print $1}' /var/log/nginx/access.log | sort | uniq -c | sort -nr"

- name: Check for bash_history
  stat:
    path: "{{ galaxy_user.home }}/.bash_history"
  register: bashhistory_stat_out

- name: Create bash_history
  file:
    path: "{{ galaxy_user.home }}/.bash_history"
    state: touch
  when: not bashhistory_stat_out.stat.exists
