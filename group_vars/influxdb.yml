---
influxdb_base_data_dir: /data/dnb01/influxdb
usegalaxy_eu_autofs_mounts:
 - data

certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_auto_renew_hour: 4
certbot_auto_renew_minute: 03
certbot_auto_renew_extra: "--preferred-challenges http-01 --http-01-port 8118"

certbot_environment: production #staging
certbot_domains:
  - "{{ hostname }}"
certbot_agree_tos: --agree-tos
certbot_admin_email: security@usegalaxy.eu
certbot_post_renewal: |
    mkdir -p  /etc/ssl/private/ /etc/ssl/influxdb
    chmod 750 /etc/ssl/private/ /etc/ssl/influxdb
    cp /etc/letsencrypt/live/{{ hostname }}/fullchain.pem /etc/ssl/certs/{{ hostname }}
    cp /etc/letsencrypt/live/{{ hostname }}/privkey.pem   /etc/ssl/private/privkey.pem
    cp /etc/letsencrypt/live/{{ hostname }}/privkey.pem   /etc/ssl/influxdb/privkey.pem
    chmod 644 /etc/ssl/certs/{{ hostname }}
    chmod 640 /etc/ssl/private/privkey.pem
    chmod 640 /etc/ssl/influxdb/privkey.pem
    chown root:nginx -R /etc/ssl/private/
    chown influxdb:influxdb -R /etc/ssl/influxdb/
    systemctl restart nginx || true
    systemctl restart influxdb || true

nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"

  - listen: "443 ssl"
    server_name: "{{ hostname }}"
    root: "/var/www/{{ hostname }}"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "{{ hostname }}.conf"
    extra_parameters: |
        location / {
            root /usr/share/nginx/html;
        }

        location /.well-known/ {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8118;
            proxy_pass_request_headers on;
        }

        ssl_certificate /etc/ssl/certs/{{ hostname }};
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        ssl_protocols TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
        ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;


influxdb_http_auth_enabled: "true"
influxdb_http_https_enabled: "true"
influxdb_http_https_certificate: "/etc/ssl/certs/{{ hostname }}"
influxdb_http_https_private_key: "/etc/ssl/influxdb/privkey.pem"

# [[graphite]]
influxdb_graphite_enabled: "false"
influxdb_collectd_enabled: "false"
influxdb_tsb_enabled: "false"
influxdb_udp_enabled: "false"
