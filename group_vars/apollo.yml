---
hxr_custom_group:
  name: tomcat
hxr_custom_user:
  name: tomcat
  comment: "Apache Tomcat"
  shell: /sbin/nologin

usegalaxy_eu_autofs_mounts:
 - data

tomcat7_packages:
- tomcat
- tomcat-admin-webapps
- tomcat-webapps

tomcat7_hostname: localhost
tomcat7_server_port: 8005
tomcat7_catalina_port: 8080
tomcat7_catalina_redirect_port: 8443
tomcat7_ajp_port: 8009
tomcat7_uriencoding: ""

certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_auto_renew_hour: 23
certbot_auto_renew_minute: 45
certbot_auto_renew_extra: "--preferred-challenges http-01 --http-01-port 8118"

certbot_environment: production #staging
certbot_domains:
  - "{{ hostname }}"
certbot_agree_tos: --agree-tos
certbot_admin_email: security@usegalaxy.eu
certbot_post_renewal: |
    systemctl restart nginx || true

nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"

  - listen: "443 ssl"
    server_name: "{{ hostname }}"
    root: "/var/www/{{ hostname }}"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "{{ hostname }}.conf"
    extra_parameters: |
        location / {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:5000;
            proxy_pass_request_headers on;
        }

        location /.well-known/ {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8118;
            proxy_pass_request_headers on;
        }

        location /apollo_api {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8080/apollo;
            proxy_pass_request_headers on;

            add_header  Access-Control-Allow-Origin "*";
            add_header  Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT";
            add_header  Access-Control-Max-Age "1000";
            add_header  Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token";

            if ($request_method = OPTIONS ) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                add_header  Access-Control-Allow-Origin "*";
                add_header  Access-Control-Allow-Methods "POST, GET, OPTIONS, DELETE, PUT";
                add_header  Access-Control-Max-Age "1000";
                add_header  Access-Control-Allow-Headers "x-requested-with, Content-Type, origin, authorization, accept, client-security-token";
                return 200;
            }
        }

        ssl_certificate /etc/ssl/certs/{{ hostname }};
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        ssl_protocols TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
        ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

telegraf_plugins_extra:
  - plugin: statsd
    config:
      - protocol = "udp"
      - max_tcp_connections = 250
      - service_address = ":8125"
      - delete_gauges = true
      - delete_counters = true
      - delete_sets = true
      - delete_timings = true
      - percentiles = [90]
      - metric_separator = "."
      - parse_data_dog_tags = false
      - allowed_pending_messages = 10000
      - percentile_limit = 1000
  - plugin: tomcat
    config:
      - username = "monitor"
      - password = "{{ tomcat7_monitor_password }}"
