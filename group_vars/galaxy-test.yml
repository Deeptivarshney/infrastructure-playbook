---
codename: test

# Docker
docker_users:
  - galaxy
docker_service_state: stopped
docker_service_enabled: false

# Autofs
usegalaxy_eu_autofs_mounts:
 - data
 - usrlocal

# Telegraf
telegraf_agent_hostname: test.galaxyproject.eu
telegraf_plugins_extra:
  procstat_nginx:
    plugin: procstat
    config:
      - pattern = ".*nginx.*"
      - cmdline_tag = true
  procstat_handler:
    plugin: procstat
    config:
      - pattern = ".*server-name=handler_main.*"
      - cmdline_tag = true
  procstat_zergling:
    plugin: procstat
    config:
      - pattern = ".*uwsgi.*--socket.*"
      - cmdline_tag = true
  procstat_zergpool:
    plugin: procstat
    config:
      - pattern = ".*zergpool.*"
  postgres:
    plugin: "postgresql"
    config:
      - address = "{{ galaxy_db_connection }}"
      - databases = ["galaxy"]

  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - percentiles = [90]
      - metric_separator = "."
      - allowed_pending_messages = 10000
      - percentile_limit = 100

  #monitor_condor_queue_split:
    #plugin: "exec"
    #config:
       ## TODO: sudoers rule?
      #- commands = ["sudo /usr/bin/monitor-condor-queue-split"]
      #- timeout = "10s"
      #- data_format = "influx"
      #- interval = "15s"

  monitor_condor_queue:
    plugin: "exec"
    config:
      - commands = ["sudo /usr/bin/monitor-condor-queue"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "1m"

  monitor_condor_util:
    plugin: "exec"
    config:
      - commands = ["sudo /usr/bin/monitor-condor-utilisation"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "1m"

  monitor_nfsstat:
    plugin: "exec"
    config:
      - commands = ["/usr/bin/nfsstat-influx"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "15s"


# Custom pip installer
pip_venv_path: "{{ galaxy_venv_dir }}"
pip_install_dependencies:
    # phdcomics
    - beautifulsoup4
    # Used by code_files for apollo
    - biopython
    - bcbio-gff
    # Needed for tool watching
    - watchdog
    # Needed for queue size
    - influxdb
    # Needed gxadmin graphs
    - data_hacks
    # for convenience
    - uwsgitop


yum_exclude_repos:
    - condor*
    - npm*

all_yum_repositories:
  - name: galaxy_gpel
    description: Galaxy Packages for Enterprise Linux $releasever - $basearch
    baseurl: https://depot.galaxyproject.org/yum/el/$releasever/$basearch/
    enabled: yes
    gpgcheck: no

# Galaxy monitoring
monitor_condor: true
monitor_condor_split_util: true



# AWS Credentials for certbot-route53
aws_cli_credentials:
  - account: certbot@proxy
    homedir: /root
    owner: root
    group: root


# Nginx
nginx_package_name: nginx-galaxy
nginx_remove_default_vhost: true
nginx_proxy_cache_path: "/var/cache/nginx/static levels=1:2 keys_zone=STATIC:10m inactive=24h  max_size=1g"
nginx_conf_template: "{{ playbook_dir  }}/templates/nginx/main.j2"
nginx_vhosts:
  - listen: "80"
    server_name: "default_server"

    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "galaxy.conf"
    extra_parameters: |
        error_page 404 /404.html;
        error_page 502 /502.html;
        error_page 503 /503.html;
        error_page 504 /503.html;

        location /404.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /502.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /503.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /504.html {
                root /usr/share/nginx/html;
                internal;
        }

        # Move to remote storage, hopefully hammer local disk slightly less?
        #client_body_temp_path  /data/dnb01/nginx_upload_store/;
        client_body_buffer_size 1024m;

        location / {
            uwsgi_pass      127.0.0.1:4001;

            # For testing, send data to the private zergling.
            # if ( $remote_addr ~* 95.208.248.14  ) {
            #     uwsgi_pass      127.0.0.1:4020;
            # }
            # Throttle downloads. First 100Mb are free, after that 5Mb/s.
            # users can move to FTP if they need / we can sort that out.
            limit_rate_after 100m;
            limit_rate 5m;

            include         uwsgi_params;
            proxy_hide_header x-frame-options;
            add_header X-Content-Type-Options nosniff;
            location ~ biom_simple {
                uwsgi_pass      127.0.0.1:4001;
                include         uwsgi_params;
                proxy_hide_header x-frame-options;
                proxy_hide_header Content-Security-Policy-Report-Only;
                add_header X-Content-Type-Options nosniff;
                add_header Access-Control-Allow-Origin "https://www.bx.psu.edu";
            }
        }

        location /_x_accel_redirect {
              internal;
              alias /;
              add_header X-Frame-Options SAMEORIGIN;
              add_header X-Content-Type-Options nosniff;
        }

        location /_upload {
                upload_store /data/dnb01/nginx-galaxy-test/uploads-test;
                upload_store_access user:rw group:rw all:rw;
                upload_pass_form_field "";
                upload_set_form_field "__${upload_field_name}__is_composite" "true";
                upload_set_form_field "__${upload_field_name}__keys" "name path";
                upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
                upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";
                upload_pass_args on;
                upload_pass /_upload_done;
        }

        location /_upload_done {
                set $dst /api/tools;
                if ($args ~ nginx_redir=([^&]+)) {
                        set $dst $1;
                }
                rewrite "" $dst;
        }

        location /_job_files {
                if ($request_method != POST) {
                        rewrite "" /api/jobs/$arg_job_id/files last;
                }
                upload_store /data/dnb01/nginx-galaxy-test/jobfiles-test;
                upload_store_access user:rw group:rw all:rw;
                upload_pass_form_field "";
                upload_set_form_field "__${upload_field_name}_path" "$upload_tmp_path";
                upload_pass_args on;
                upload_pass /_upload_job_files_done;
        }

        location /_upload_job_files_done {
                internal;
                rewrite "" /api/jobs/$arg_job_id/files;
        }

        location /phinch {
                root /opt;
        }

        location /static/welcome.html {
               alias /opt/multisite-css/$host.html;
        }

        location /static {
                alias {{ galaxy_server_dir }}/static;
                expires 24h;
                location /static/vgcn {
                        autoindex on;
                        alias /data/dnb01/vgcn/;
                }
        }

        location ~ /static/style/base.css {
            root /opt/multisite-css/;
            try_files /$host.css /usegalaxy.eu.css =404;
        }

        location /static/style {
                alias {{ galaxy_server_dir }}/static/style/blue;
                expires 24h;
        }
        location /static/scripts {
                alias {{ galaxy_server_dir }}/static/scripts;
                expires 24h;
        }

        location /robots.txt {
                alias {{ galaxy_server_dir }}/static/robots.txt;
        }


        location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
            alias /opt/galaxy/config/plugins/$plug_type/;
            try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
                      $vis_d/static/$static_file =404;
        }

        location /favicon.ico {
                alias {{ galaxy_server_dir }}/static/favicon.ico;
        }


        location /.well-known/ {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8118;
            proxy_pass_request_headers on;
        }

        location /join-training/ {
            proxy_pass    http://127.0.0.1:5000/join-training/;
            proxy_set_header           Host $host;
        }

        location /apollo/ {
            proxy_pass http://apollo.internal.galaxyproject.eu/apollo/;
        }

        location /apollo_api/ {
            proxy_pass http://apollo.internal.galaxyproject.eu/apollo_api/;
        }

        location /external/phdcomics/ {
                proxy_pass http://phdcomics.com/;
                # The comics are extremely cacheable. No sense waiting for a server from USA to respond.
                proxy_cache           STATIC;
                proxy_cache_valid     200  10d;
                proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        }

        location /quota-increase {
                return 301 https://docs.google.com/forms/d/e/1FAIpQLSf9w2MOS6KOlu9XdhRSDqWnCDkzoVBqHJ3zH_My4p8D8ZgkIQ/viewform;
        }

        location /request-tiaas {
                return 301 https://docs.google.com/forms/d/e/1FAIpQLSdoPRDhpYwNFuZSlGRNQj3dDWwfsdemP5yntAdcqhN3YHbqLA/viewform;
        }

        location /freiburg/ {
                proxy_pass https://galaxyproject.eu/freiburg/;
        }
        location /erasmusmc/ {
                proxy_pass https://galaxyproject.eu/erasmusmc/;
        }
        location /pasteur/ {
                proxy_pass https://galaxyproject.eu/pasteur/;
        }
        location /belgium/ {
                proxy_pass https://galaxyproject.eu/belgium/;
        }
        location /about/ {
                proxy_pass https://galaxyproject.eu/about;
        }
        location /people/ {
                proxy_pass https://galaxyproject.eu/people;
        }
        location /terms {
                proxy_pass https://galaxyproject.eu/gdpr;
        }

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

        client_max_body_size 1G; # aka max upload size, defaults to 1M
        uwsgi_read_timeout 2400;


# Dynmotd
dynmotd_custom:
  - name: Condor
    command: "condor_q -totals | tail -n 1"

# CVMFS
cvmfs_role: client
galaxy_cvmfs_repos_enabled: config-repo

galaxy_cvmfs_server_urls:
  - domain: galaxyproject.org
    urls:
      - "http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"

# SystemD
galaxy_systemd_zerglings: 1
galaxy_systemd_handlers: 1
galaxy_systemd_memory_limit: 16
galaxy_systemd_memory_limit_zp: 8
galaxy_systemd_zergling_env: "TMP=/data/dnb01/galaxy_db/tmp-uwsgi TEMP=/data/dnb01/galaxy_db/tmp-uwsgi TMPDIR=/data/dnb01/galaxy_db/tmp-uwsgi GALAXY_WEBAPOLLO_URL={{ GALAXY_WEBAPOLLO_URL }} GALAXY_WEBAPOLLO_USER={{ GALAXY_WEBAPOLLO_USER }} GALAXY_WEBAPOLLO_PASSWORD={{ GALAXY_WEBAPOLLO_PASSWORD }} GALAXY_WEBAPOLLO_EXT_URL={{ GALAXY_WEBAPOLLO_EXT_URL }} GALAXY_SHARED_DIR={{ GALAXY_SHARED_DIR }}"
galaxy_systemd_handler_env: "GALAXY_WEBAPOLLO_URL={{ GALAXY_WEBAPOLLO_URL }} GALAXY_WEBAPOLLO_USER={{ GALAXY_WEBAPOLLO_USER }} GALAXY_WEBAPOLLO_PASSWORD={{ GALAXY_WEBAPOLLO_PASSWORD }} GALAXY_WEBAPOLLO_EXT_URL={{ GALAXY_WEBAPOLLO_EXT_URL }} GALAXY_SHARED_DIR={{ GALAXY_SHARED_DIR }}"
galaxy_zergpool_listen_addr: "127.0.0.1:4001"
galaxy_zergpool_socket_name: zergpool.sock
galaxy_zergpool_listen_path: "{{ galaxy_mutable_data_dir }}/{{ galaxy_zergpool_socket_name }}"

# TODO: support yml?
galaxy_uwsgi_config_file_basename: uwsgi.ini

# HTCondor
condor_host: "manager.vgcn.galaxyproject.eu"
condor_allow_write: "10.5.68.0/24, 10.19.0.0/16, 132.230.68.0/24, *.bi.uni-freiburg.de"
condor_daemons:
    - MASTER
    - SCHEDD
condor_allow_negotiator: "132.230.68.5,132.230.68.85,$(CONDOR_HOST)"
condor_allow_administrator: "$(ALLOW_NEGOTIATOR)"

condor_system_periodic_hold: "{{ 30 * 24 * 60 * 60}}"
condor_network_interface: eth0

# gxadmin
postgres_user: galaxy-test
postgres_host: sn03.bi.uni-freiburg.de
postgres_port: 5432

# Slurp script
galaxy_slurper: galaxy
galaxy_slurp_influx_pass: "{{ influxdb.node.password }}"
galaxy_slurp_influx_user: "{{ influxdb.node.username }}"
galaxy_slurp_influx_url: "{{ influxdb.url }}"

# GRT
galaxy_grt_exporter: galaxy
galaxy_grt_uploader: galaxy

# Influx Notifier
gxadmin_influx_task_notifier: true
gxadmin_influx_task_notifier_db: notifications

# postgres_pass defined in secret_group_vars/all.yml
gxadmin_commit: master
gxadmin_dir: /opt/gxadmin
gxadmin_bin_dir: /usr/bin
gxadmin_force: true

# GALAXY
galaxy_group: galaxy
galaxy_system_group: galaxy
galaxy_instance_codename: "{{ codename }}"
galaxy_log_dir: '/var/log/galaxy/'
galaxy_layout: root-dir
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_build_client: false
galaxy_restart_handler_name: Restart Galaxy
galaxy_create_user: true
galaxy_user:
    name: galaxy
    create_home: true
    home: /opt/galaxy
    uid: 999
    shell: /bin/bash


galaxy_root: /opt/galaxy
galaxy_handler_count: 1
galaxy_host_codename: "{{ codename }}"
galaxy_home_dir: /opt/galaxy
galaxy_mutable_config_dir: /opt/galaxy/mutable-config
galaxy_mutable_data_dir: /opt/galaxy/mutable-data
galaxy_shed_tools_dir: /opt/galaxy/shed_tools
__galaxy_shed_tools_dir: "{{ galaxy_shed_tools_dir }}"
galaxy_backup_configfiles: false

galaxy_server_dir: "{{ galaxy_root }}/server"
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_venv_dir: "{{ galaxy_root  }}/venv"
galaxy_nonrepro_tools: "{{ galaxy_root }}/custom-tools"
galaxy_nonrepro_commit: master

galaxy_dynamic_job_rules_src_dir: files/galaxy-test/dynamic_rules
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_rules"
galaxy_dynamic_job_rules:
  - usegalaxy/sorting_hat.py
  - usegalaxy/destination_specifications.yaml
  - usegalaxy/blast_destinations.py
  - usegalaxy/tool_destinations.yaml
  - usegalaxy/dexseq.py
  - usegalaxy/wig2bigwig.py
  - readme.txt

# Custom override
# Our galaxy_tool_dependency_dir is on NFS, and permissions are set in such a
# way that they cannot be changed by the ansible connected user.
galaxy_dirs:
  - "{{ galaxy_mutable_data_dir }}"
  - "{{ galaxy_mutable_config_dir }}"
  - "{{ galaxy_cache_dir }}"
  - "{{ galaxy_shed_tools_dir }}"
  #- "{{ galaxy_tool_dependency_dir }}"
  - "{{ galaxy_file_path }}"
  - "{{ galaxy_job_working_directory }}"

galaxy_instance_hostname: usegalaxy.eu
galaxy_config_style: 'ini'

galaxy_repo: 'https://github.com/usegalaxy-eu/galaxy.git'
galaxy_commit_id: 'release_19.05_europe'
galaxy_force_checkout: true # discard any modified files
#galaxy_admin_email_from: 'noreply@usegalaxy.eu'

# Job Conf

galaxy_jobconf:
    plugin_workers: 8
    handlers:
        count: "{{ galaxy_handler_count }}"
        assign_with: db-skip-locked
        max_grab: 4
    plugins:
        #- id: drmaa
          #load: galaxy.jobs.runners.drmaa:DRMAAJobRunner
          #workers: 3
        # These live on the pythonpath
        - id: dynamic
          params:
            rules_module: 'usegalaxy'
        - id: condor
          load: galaxy.jobs.runners.condor:CondorJobRunner
        - id: local
          load: galaxy.jobs.runners.local:LocalJobRunner
        - id: pulsar_embedded
          load: galaxy.jobs.runners.pulsar:PulsarEmbeddedJobRunner
        - id: pulsar_eu_cz
          load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
          params:
            amqp_url: "pyamqp://galaxy_cz:{{ rabbitmq_password_galaxy_cz }}@proxy.internal.galaxyproject.eu:5671//pulsar/galaxy_cz?ssl=1"
            galaxy_url: "https://usegalaxy.eu"
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
        - id: pulsar_eu_bari
          load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
          params:
            amqp_url: "pyamqp://galaxy_bari:{{ rabbitmq_password_galaxy_bari }}@proxy.internal.galaxyproject.eu:5671//pulsar/galaxy_bari?ssl=1"
            galaxy_url: "https://usegalaxy.eu"
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
        - id: pulsar_eu_freiburg
          load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
          params:
            amqp_url: "pyamqp://galaxy_freiburg:{{ rabbitmq_password_galaxy_freiburg }}@proxy.internal.galaxyproject.eu:5671//pulsar/galaxy_freiburg?ssl=1"
            galaxy_url: "https://usegalaxy.eu"
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
        - id: pulsar_eu_belgium
          load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
          params:
            amqp_url: "pyamqp://galaxy_belgium:{{ rabbitmq_password_galaxy_belgium }}@proxy.internal.galaxyproject.eu:5671//pulsar/galaxy_belgium?ssl=1"
            galaxy_url: "https://usegalaxy.eu"
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
        - id: pulsar_eu_test
          load: galaxy.jobs.runners.pulsar:PulsarMQJobRunner
          params:
            amqp_url: "pyamqp://galaxy_test:{{ rabbitmq_password_galaxy_test }}@proxy.internal.galaxyproject.eu:5671//pulsar/galaxy_test?ssl=1"
            galaxy_url: https://usegalaxy.eu
            manager: _default_
            amqp_acknowledge: True
            amqp_ack_republish_time: 300
            amqp_consumer_timeout: 2.0
            amqp_publish_retry: True
            amqp_publish_retry_max_retries: 60
    default_destination: gateway_1x
    destinations:
        - id: local
          runner: local
        - id: condor
          runner: condor
          params:
            tmp_dir: "True"
        # Gateways
        - id: gateway_1x
          runner: dynamic
          params:
              type: python
              function: gateway_1x
        - id: gateway_1_5x
          runner: dynamic
          params:
              type: python
              function: gateway_1_5x
        - id: gateway_2x
          runner: dynamic
          params:
              type: python
              function: gateway_2x
        # Pulsar MQs
        - id: remote_cluster_mq_cz
          runner: pulsar_eu_cz
          params:
              jobs_directory: /storage/brno11-elixir/home/galaxyeu/galaxy-staging/
        - id: remote_cluster_mq_test
          runner: pulsar_eu_test
          env:
              LC_ALL: C
          params:
              jobs_directory: /data/share/staging
              transport: curl
              remote_metadata: "false"
              default_file_action: remote_transfer
              dependency_resolution: remote
              rewrite_parameters: "true"
              persistence_directory: /data/share/persisted_data
        - id: remote_cluster_mq_bari
          runner: pulsar_eu_bari
          env:
              LC_ALL: C
          params:
              jobs_directory: /data/share/staging
              transport: curl
              remote_metadata: "false"
              default_file_action: remote_transfer
              dependency_resolution: remote
              rewrite_parameters: "true"
              persistence_directory: /data/share/persisted_data
        - id: remote_cluster_mq_freiburg
          runner: pulsar_eu_freiburg
          env:
              LC_ALL: C
              SINGULARITY_CACHEDIR: /data/share/var/database/container_cache
          params:
              jobs_directory: /data/share/staging
              transport: curl
              remote_metadata: "false"
              default_file_action: remote_transfer
              dependency_resolution: remote
              rewrite_parameters: "true"
              persistence_directory: /data/share/persisted_data
              singularity_enabled: "true"
              singularity_volumes: $defaults
        - id: remote_cluster_mq_belgium
          runner: pulsar_eu_belgium
          env:
              LC_ALL: C
          params:
              jobs_directory: /data/share/staging
              transport: curl
              remote_metadata: "false"
              default_file_action: remote_transfer
              dependency_resolution: remote
              rewrite_parameters: "true"
              persistence_directory: /data/share/persisted_data
        - id: condor_singularity
          runner: condor
          params:
              singularity_enabled: 'true'
              singularity_volumes: '$galaxy_root:ro,$tool_directory:ro,$working_directory:rw,$job_directory:rw,/data/db/:ro,/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro'
              singularity_default_container_id: '/data/0/cvmfs/singularity/ubuntu:18.04'
        - id: condor_singularity2
          runner: condor
          params:
              singularity_enabled: 'true'
              singularity_volumes: '$galaxy_root:ro,$tool_directory:ro,$working_directory:rw,$job_directory:rw,/data/db/:ro,/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro'
              singularity_default_container_id: '/data/0/cvmfs/singularity/ubuntu:18.04'
          raw: |
            <param id="container">
                <container type="singularity" shell="/bin/sh" resolve_dependencies="true">/data/0/cvmfs/singularity/ubuntu:18.04</container>
            </param>
        - id: condor_singularity_with_conda
          runner: condor
          params:
              singularity_enabled: 'true'
          raw: |
            <param id="container">
                <container type="singularity" shell="/bin/bash" resolve_dependencies="true">/data/0/cvmfs/singularity/python:2.7.12--1</container>
            </param>
        - id: condor_docker
          runner: condor
          params:
            docker_enabled: 'true'
            docker_volumes: '$galaxy_root:ro,$tool_directory:ro,$working_directory:rw,$job_directory:rw,/data/db/:ro,/data/dnb01/galaxy_db/:ro,/data/dnb02/galaxy_db/:ro'
            docker_default_container_id: 'ubuntu:18.04'
            docker_auto_rm: 'true'
            docker_sudo: 'false'
        # TODO(hxr): check functionality
        #- id: 24cores_15G_BLAST
        #  runner: dynamic
        #  params:
        #      type: python
        #      function: blast_destinations
        #- id: wig_to_bigWig
        #  runner: dynamic
        #  params:
        #      type: python
        #      function: wig_to_bigwig
        #- id: dexseq_dynamic
        #  runner: dynamic
        #  params:
        #      type: python
        #      function: dexseq
        # Embedded pulsar
        - id: secure_pulsar_singularity
          runner: pulsar_embedded
          params:
              remote_metadata: true
              singularity_enabled: true
    tools:
        # TODO(hxr): implement validation that checks that every destination
        # used here is defined above.
        - id: upload1
          destination: gateway_1x
        #- id: wig_to_bigWig
          #destination: wig_to_bigWig
        #- id: dexseq
          #destination: dexseq_dynamic
        #- id: ncbi_blastn_wrapper
          #destination: 24cores_15G_BLAST
        #- id: ncbi_blastx_wrapper
          #destination: 24cores_15G_BLAST
        #- id: ncbi_tblastn_wrapper
          #destination: 24cores_15G_BLAST
        #- id: ncbi_tblastx_wrapper
          #destination: 24cores_15G_BLAST
        #- id: ncbi_blastp_wrapper
          #destination: 24cores_15G_BLAST
        #- id: ncbi_rpsblast_wrapper
          #destination: 24cores_15G_BLAST
    limits:
        walltime: '148:00:00'
        output_size: '300GB'
        registered_user_concurrent_jobs: '30'
        anonymous_user_concurrent_jobs: '10'



galaxy_config: "{{ galaxy_config_hash }}"

galaxy_config_file_src_dir: files/galaxy-test
galaxy_config_files:
  # TODO(bgruening): sync this with cvmfs? can we have ours be just a small additional builds.txt?
  - src: "{{ galaxy_config_file_src_dir }}/config/builds.txt"
    dest: "{{ galaxy_config['app:main']['builds_file_path'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/data_manager_conf.xml"
    dest: "{{ galaxy_config['app:main']['data_manager_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/datatypes_conf.xml"
    dest: "{{ galaxy_config['app:main']['datatypes_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/dependency_resolvers_conf.xml"
    dest: "{{ galaxy_config['app:main']['dependency_resolvers_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/disposable_email_blacklist.conf"
    dest: "{{ galaxy_config['app:main']['blacklist_file'] }}"
  # test? Unknown if this works.
  - src: "{{ galaxy_config_file_src_dir }}/config/error_report.yml"
    dest: "{{ galaxy_config_dir }}/error_report.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/job_metrics_conf.xml"
    dest: "{{ galaxy_config['app:main']['job_metrics_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/migrated_tools_conf.xml"
    dest: "{{ galaxy_config['app:main']['migrated_tools_config'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/object_store_conf.xml"
    dest: "{{ galaxy_config['app:main']['object_store_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_data_table_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_sheds_conf.xml"
    dest: "{{ galaxy_config['app:main']['tool_sheds_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/ucsc_build_sites.txt"
    dest: "{{ galaxy_config['app:main']['ucsc_build_sites'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/echo_main_env.xml"
    dest: "{{ galaxy_config_dir }}/echo_main_env.xml"

  #- src: files/galaxy/config/job_resource_params_conf.xml
    #dest: "{{ galaxy_config['app:main']['job_resource_params_file'] }}"
  #- src: files/galaxy/config/pulsar_stampede_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_stampede_actions.yml"
  #- src: files/galaxy/config/pulsar_bridges_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_bridges_actions.yml"
  #- src: files/galaxy/config/pulsar_jetstream.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_jetstream.yml"
  #- src: files/galaxy/config/pulsar_jetstream_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_jetstream_actions.yml"

galaxy_config_template_src_dir: templates/galaxy-test
galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/build_sites.yml.j2"
    dest: "{{ galaxy_config['app:main']['build_sites_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/global_host_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/global_host_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/job_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/job_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/container_resolvers_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/user_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/user_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/uwsgi.ini.j2"
    dest: "{{ galaxy_config_dir }}/uwsgi.ini"
  - src: "{{ galaxy_config_template_src_dir }}/config/nagios_tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml"
    dest: "{{ galaxy_config['app:main']['oidc_backends_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config['app:main']['oidc_config_file'] }}"
  #- src: "{{ galaxy_config_template_src_dir }}/config/grt.yml.j2"
    #dest: "{{ galaxy_config_dir }}/grt.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/pulsar_app.yml"
    dest: "{{ galaxy_config_dir }}/pulsar_app.yml"




# Custom EU nonsense
#
toolbox:
    toolbox_sections:
      - name: Genomics (NGS)
        include_sections:
        - Variant calling
        - Epigenetics
        - Assembly
        - RAD-seq
        - Genome editing

      - name: Metagenomics
        include_sections:
        - Metagenomic analyses
        - Qiime
        - Mothur

      - name: Proteomics
        include_sections:
        - Proteomics

      - name: Metabolomics
        include_sections:
        - Metabolomics

      - name: Cheminformatics
        include_sections:
        - ChemicalToolBox

      - name: Genome Annotation
        include_sections:
        - Annotation
        - OBO Ontology manipulatoin
