---
docker_service_state: stopped
docker_service_enabled: false

usegalaxy_eu_autofs_mounts:
 - data
 - usrlocal

nginx_package_name: nginx-galaxy

telegraf_agent_hostname: test.galaxyproject.eu
telegraf_plugins_extra:
  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - percentiles = [90]
      - metric_separator = "."
      - allowed_pending_messages = 10000
      - percentile_limit = 100

  #monitor_condor_queue_split:
    #plugin: "exec"
    #config:
       ## TODO: sudoers rule?
      #- commands = ["sudo /usr/bin/monitor-condor-queue-split"]
      #- timeout = "10s"
      #- data_format = "influx"
      #- interval = "15s"

  monitor_condor_queue:
    plugin: "exec"
    config:
      - commands = ["sudo /usr/bin/monitor-condor-queue"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "1m"

  monitor_condor_util:
    plugin: "exec"
    config:
      - commands = ["sudo /usr/bin/monitor-condor-utilisation"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "1m"

  monitor_nfsstat:
    plugin: "exec"
    config:
      - commands = ["/usr/bin/nfsstat-influx"]
      - timeout = "10s"
      - data_format = "influx"
      - interval = "15s"


pip_venv_path: "{{ galaxy_venv_dir }}"
pip_install_dependencies:
    # phdcomics
    - beautifulsoup4
    # Used by code_files for apollo
    - biopython
    - bcbio-gff
    # Needed for tool watching
    - watchdog
    # Needed for queue size
    - influxdb
    # Needed gxadmin graphs
    - data_hacks
    # for convenience
    - uwsgitop


yum_exclude_repos:
    - condor*
    - npm*

all_yum_repositories:
  - name: galaxy_gpel
    description: Galaxy Packages for Enterprise Linux $releasever - $basearch
    baseurl: https://depot.galaxyproject.org/yum/el/$releasever/$basearch/
    enabled: yes
    gpgcheck: no

# Galaxy monitoring
monitor_condor: true
monitor_condor_split_util: true


# Certbot
certbot_post_renewal: |
    systemctl restart nginx || true

# Nginx
nginx_remove_default_vhost: true
nginx_proxy_cache_path: "/var/cache/nginx/static levels=1:2 keys_zone=STATIC:10m inactive=24h  max_size=1g"
nginx_conf_template: "{{ playbook_dir  }}/templates/nginx/main.j2"
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    #return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    #filename: "{{ hostname }}.conf"
    extra_parameters: |
        error_page 404 /404.html;
        error_page 502 /502.html;
        error_page 503 /503.html;
        error_page 504 /503.html;

        location /404.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /502.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /503.html {
                root /usr/share/nginx/html;
                internal;
        }
        location /504.html {
                root /usr/share/nginx/html;
                internal;
        }

        location / {
            uwsgi_pass      127.0.0.1:4000;

            include         uwsgi_params;
            proxy_hide_header x-frame-options;
            add_header X-Content-Type-Options nosniff;
            location ~ biom_simple {
                uwsgi_pass      127.0.0.1:4000;
                include         uwsgi_params;
                proxy_hide_header x-frame-options;
                proxy_hide_header Content-Security-Policy-Report-Only;
                add_header X-Content-Type-Options nosniff;
                add_header Access-Control-Allow-Origin "https://www.bx.psu.edu";
            }
        }

        location /_x_accel_redirect {
              internal;
              alias /;
              add_header X-Frame-Options SAMEORIGIN;
              add_header X-Content-Type-Options nosniff;
        }

        location /phinch {
                root /opt;
        }

        location /static/welcome.html {
               alias /opt/multisite-css/$host.html;
        }

        location /static {
                alias {{ galaxy_server_dir }}/static;
                expires 24h;
        }

        location ~ /static/style/base.css {
               alias /opt/multisite-css/$host.css;
        }

        location /static/style {
                alias {{ galaxy_server_dir }}/static/style/blue;
                expires 24h;
        }
        location /static/scripts {
                alias {{ galaxy_server_dir }}/static/scripts;
                expires 24h;
        }

        location /robots.txt {
                alias {{ galaxy_server_dir }}/static/robots.txt;
        }


        location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
            alias /opt/galaxy/config/plugins/$plug_type/;
            try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
                      $vis_d/static/$static_file =404;
        }

        location /favicon.ico {
                alias {{ galaxy_server_dir }}/static/favicon.ico;
        }


        location /.well-known/ {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:8118;
            proxy_pass_request_headers on;
        }

        location /join-training/ {
            proxy_pass    http://127.0.0.1:5000/join-training/;
        }

        location /external/phdcomics/ {
                proxy_pass http://phdcomics.com/;
                # The comics are extremely cacheable. No sense waiting for a server from USA to respond.
                proxy_cache           STATIC;
                proxy_cache_valid     200  10d;
                proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        }

        location /quota-increase {
                return 301 https://docs.google.com/forms/d/e/1FAIpQLSf9w2MOS6KOlu9XdhRSDqWnCDkzoVBqHJ3zH_My4p8D8ZgkIQ/viewform;
        }

        location /request-tiaas {
                return 301 https://docs.google.com/forms/d/e/1FAIpQLSdoPRDhpYwNFuZSlGRNQj3dDWwfsdemP5yntAdcqhN3YHbqLA/viewform;
        }

        location /freiburg/ {
                proxy_pass https://galaxyproject.eu/freiburg/;
        }
        location /erasmusmc/ {
                proxy_pass https://galaxyproject.eu/erasmusmc/;
        }
        location /pasteur/ {
                proxy_pass https://galaxyproject.eu/pasteur/;
        }
        location /belgium/ {
                proxy_pass https://galaxyproject.eu/belgium/;
        }
        location /about/ {
                proxy_pass https://galaxyproject.eu/about;
        }
        location /people/ {
                proxy_pass https://galaxyproject.eu/people;
        }
        location /terms {
                proxy_pass https://galaxyproject.eu/gdpr;
        }

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

        client_max_body_size 1G; # aka max upload size, defaults to 1M
        uwsgi_read_timeout 2400;


# Dynmotd
dynmotd_custom:
  - name: Condor
    command: "condor_q -totals | tail -n 1"

# CVMFS
cvmfs_role: client
galaxy_cvmfs_repos_enabled: true

galaxy_cvmfs_server_urls:
  - domain: galaxyproject.org
    urls:
      - "http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"

galaxy_cvmfs_repositories:
  - repository: main.galaxyproject.org
    stratum0: cvmfs0-tacc0.galaxyproject.org
    key_dir: /etc/cvmfs/keys/galaxyproject.org
    server_options:
      - CVMFS_AUTO_GC=false
    client_options: []
  - repository: data.galaxyproject.org
    stratum0: cvmfs0-psu0.galaxyproject.org
    key_dir: /etc/cvmfs/keys/galaxyproject.org
    server_options:
      - CVMFS_AUTO_GC=false
    client_options: []
  - repository: singularity.galaxyproject.org
    stratum0: cvmfs0-psu0.galaxyproject.org
    key_dir: /etc/cvmfs/keys/galaxyproject.org
    server_options: []
    client_options: []

# SystemD
galaxy_systemd_zerglings: 1
galaxy_systemd_handlers: 1
galaxy_systemd_memory_limit: 16
galaxy_systemd_memory_limit_zp: 8
galaxy_zergpool: false



# TODO: support yml?
galaxy_uwsgi_config_file_basename: uwsgi.ini

# HTCondor
condor_host: "127.0.0.1"
condor_allow_write: "127.0.0.1,10.5.68.*"
# single node host
condor_daemons:
    - MASTER
    - SCHEDD
    - COLLECTOR
    - NEGOTIATOR
    - STARTD
condor_allow_negotiator: "132.230.68.5,132.230.68.85,$(CONDOR_HOST)"
condor_allow_administrator: "$(ALLOW_NEGOTIATOR)"

condor_system_periodic_hold: "{{ 30 * 24 * 60 * 60}}"
condor_network_interface: eth0

# gxadmin
postgres_user: galaxy
postgres_host: sn03.bi.uni-freiburg.de
postgres_port: 5432

# Slurp script
galaxy_slurper: galaxy
galaxy_slurp_influx_pass: "{{ influxdb.node.password }}"
galaxy_slurp_influx_user: "{{ influxdb.node.username }}"
galaxy_slurp_influx_url: "{{ influxdb.url }}"

# postgres_pass defined in secret_group_vars/all.yml
gxadmin_commit: master
gxadmin_dir: /opt/gxadmin
gxadmin_bin_dir: /usr/bin
gxadmin_force: true

# GALAXY
galaxy_group: galaxy
galaxy_system_group: galaxy
galaxy_instance_codename: test
galaxy_log_dir: '/var/log/galaxy/'
galaxy_layout: root-dir
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_build_client: false
galaxy_restart_handler_name: Restart Galaxy
galaxy_create_user: true
galaxy_user:
    name: galaxy
    create_home: true
    home: /opt/galaxy
    uid: 999
    shell: /bin/bash


galaxy_root: /opt/galaxy
galaxy_handler_count: 12
galaxy_host_codename: test
galaxy_home_dir: /opt/galaxy
galaxy_mutable_config_dir: /opt/galaxy/mutable-config
galaxy_mutable_data_dir: /opt/galaxy/mutable-data
galaxy_shed_tools_dir: /opt/galaxy/shed_tools
__galaxy_shed_tools_dir: "{{ galaxy_shed_tools_dir }}"
galaxy_backup_configfiles: false

galaxy_server_dir: "{{ galaxy_root }}/server"
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_venv_dir: "{{ galaxy_root  }}/venv"
galaxy_nonrepro_tools: "{{ galaxy_root }}/custom-tools"
galaxy_nonrepro_commit: master

galaxy_dynamic_job_rules_src_dir: files/galaxy-test/dynamic_rules
galaxy_dynamic_job_rules_dir: "{{ galaxy_root }}/dynamic_rules"
galaxy_dynamic_job_rules:
  - usegalaxy/sorting_hat.py
  - usegalaxy/destination_specifications.yaml
  - usegalaxy/blast_destinations.py
  - usegalaxy/tool_destinations.yaml
  - usegalaxy/dexseq.py
  - usegalaxy/wig2bigwig.py
  - readme.txt

galaxy_instance_hostname: usegalaxy.eu
galaxy_config_style: 'ini'

galaxy_repo: 'https://github.com/usegalaxy-eu/galaxy.git'
galaxy_commit_id: 'release_19.01_europe' # release_18.09_europe
galaxy_force_checkout: true # discard any modified files
galaxy_admin_email_to: 'contact@usegalaxy.eu'
#galaxy_admin_email_from: 'noreply@usegalaxy.eu'

# Job Conf

galaxy_jobconf:
    plugin_workers: 4
    handlers:
        count: "{{ galaxy_handler_count }}"
        assign_with: db-preassign
    plugins:
        # These live on the pythonpath
        - id: dynamic
          params:
            rules_module: 'usegalaxy'
        - id: local
          load: galaxy.jobs.runners.local:LocalJobRunner
    default_destination: local
    destinations:
        - id: local
          runner: local
        # Gateways
        - id: gateway_1x
          runner: dynamic
          params:
              type: python
              function: gateway_1x
        - id: gateway_1_5x
          runner: dynamic
          params:
              type: python
              function: gateway_1_5x
        - id: gateway_2x
          runner: dynamic
          params:
              type: python
              function: gateway_2x
    tools:
        # TODO(hxr): implement validation that checks that every destination
        # used here is defined above.
        - id: upload1
          destination: local
    limits:
        walltime: '148:00:00'
        output_size: '300GB'
        registered_user_concurrent_jobs: '30'
        anonymous_user_concurrent_jobs: '10'



galaxy_config: "{{ galaxy_config_hash }}"

galaxy_config_file_src_dir: files/galaxy-test
galaxy_config_files:
  # TODO(bgruening): sync this with cvmfs? can we have ours be just a small additional builds.txt?
  - src: "{{ galaxy_config_file_src_dir }}/config/builds.txt"
    dest: "{{ galaxy_config['app:main']['builds_file_path'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/data_manager_conf.xml"
    dest: "{{ galaxy_config['app:main']['data_manager_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/datatypes_conf.xml"
    dest: "{{ galaxy_config['app:main']['datatypes_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/dependency_resolvers_conf.xml"
    dest: "{{ galaxy_config['app:main']['dependency_resolvers_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/disposable_email_blacklist.conf"
    dest: "{{ galaxy_config['app:main']['blacklist_file'] }}"
  # test? Unknown if this works.
  - src: "{{ galaxy_config_file_src_dir }}/config/error_report.yml"
    dest: "{{ galaxy_config_dir }}/error_report.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/job_metrics_conf.xml"
    dest: "{{ galaxy_config['app:main']['job_metrics_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/migrated_tools_conf.xml"
    dest: "{{ galaxy_config['app:main']['migrated_tools_config'] }}"
  #- src: "{{ galaxy_config_file_src_dir }}/config/object_store_conf.xml"
    #dest: "{{ galaxy_config['app:main']['object_store_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_data_table_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_sheds_conf.xml"
    dest: "{{ galaxy_config['app:main']['tool_sheds_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/ucsc_build_sites.txt"
    dest: "{{ galaxy_config['app:main']['ucsc_build_sites'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/echo_main_env.xml"
    dest: "{{ galaxy_config_dir }}/echo_main_env.xml"

  #- src: files/galaxy/config/job_resource_params_conf.xml
    #dest: "{{ galaxy_config['app:main']['job_resource_params_file'] }}"
  #- src: files/galaxy/config/pulsar_stampede_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_stampede_actions.yml"
  #- src: files/galaxy/config/pulsar_bridges_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_bridges_actions.yml"
  #- src: files/galaxy/config/pulsar_jetstream.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_jetstream.yml"
  #- src: files/galaxy/config/pulsar_jetstream_actions.yml
    #dest: "{{ galaxy_config_dir }}/pulsar_jetstream_actions.yml"

galaxy_config_template_src_dir: templates/galaxy-test
galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/build_sites.yml.j2"
    dest: "{{ galaxy_config['app:main']['build_sites_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/global_host_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/global_host_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/job_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/job_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/user_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/user_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/uwsgi.ini.j2"
    dest: "{{ galaxy_config_dir }}/uwsgi.ini"
  - src: "{{ galaxy_config_template_src_dir }}/config/nagios_tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml"
    dest: "{{ galaxy_config['app:main']['oidc_backends_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config['app:main']['oidc_config_file'] }}"




# Custom EU nonsense
#
toolbox:
    toolbox_sections:
      - name: Genomics (NGS)
        include_sections:
        - Variant calling
        - Epigenetics
        - Assembly
        - RAD-seq
        - Genome editing

      - name: Metagenomics
        include_sections:
        - Metagenomic analyses
        - Qiime
        - Mothur

      - name: Proteomics
        include_sections:
        - Proteomics

      - name: Metabolomics
        include_sections:
        - Metabolomics

      - name: Cheminformatics
        include_sections:
        - ChemicalToolBox

      - name: Genome Annotation
        include_sections:
        - Annotation
        - OBO Ontology manipulatoin
