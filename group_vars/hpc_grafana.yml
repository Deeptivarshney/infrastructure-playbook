certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_auto_renew_hour: 3
certbot_auto_renew_minute: 30

certbot_environment: production #staging
certbot_domains:
  - "{{ hostname }}"
certbot_agree_tos: --agree-tos
certbot_admin_email: security@usegalaxy.eu
certbot_post_renewal: |
    mkdir -p /etc/ssl/private/
    cp /etc/letsencrypt/live/{{ hostname }}/fullchain.pem /etc/ssl/certs/{{ hostname }}
    cp /etc/letsencrypt/live/{{ hostname }}/privkey.pem   /etc/ssl/private/privkey.pem
    chmod 644 /etc/ssl/certs/{{ hostname }}
    chmod 640 /etc/ssl/private/privkey.pem
    chmod 750 /etc/ssl/private/
    chown nginx:nginx /etc/ssl/private/privkey.pem
    chown nginx:nginx -R /etc/ssl/private/privkey.pem
    systemctl restart nginx || true

nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"

  - listen: "443 ssl"
    server_name: "{{ hostname }}"
    root: "/var/www/{{ hostname }}"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "{{ hostname }}.conf"
    extra_parameters: |

        location /raw {
            root /var/www/html/;
        }

        location / {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:3000;
            proxy_pass_request_headers on;
        }
        ssl_certificate /etc/ssl/certs/{{ hostname }};
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        ssl_protocols TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
        ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

grafana_server_domain: "{{ hostname }}"
grafana_users_default_theme: "light"
# Enable anonymous access
grafana_auth__anonymous_enabled: "true"
# Specify organization name that should be used for unauthenticated users
grafana_auth__anonymous_org_name: Main Org.
# Specify role for unauthenticated users
grafana_auth__anonymous_org_role: Viewer
grafana_server_root_url: "%(protocol)s://%(domain)s/"

telegraf_agent_output:
  - type: influxdb
    config:
    - urls = ["{{ influxdb.url }}"]
    - database = "{{ influxdb.bwcloud.database }}"
    - username = "{{ influxdb.bwcloud.username }}"
    - password = "{{ influxdb.bwcloud.password }}"

telegraf_plugins_extra:
  - plugin: exec
    config:
      - commands = ["/usr/bin/simple-nagios"]
      - timeout = "120s"
      - data_format = "influx"
      - interval = "1m"

  - plugin: exec
    disambiguation: ssl-expiry
    config:
      - commands = [
          "/usr/bin/simple-ssl-check mon01.bwcloud.uni-freiburg.de",
          "/usr/bin/simple-ssl-check portal.bw-cloud.org",
          "/usr/bin/simple-ssl-check idm01.bw-cloud.org",
          "/usr/bin/simple-ssl-check idm01.bw-cloud.org 5000",
        ]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "15m"

  - plugin: dns_query
    config:
      #            cf         goog       quad9      opendns           BelWÃ¼
      - servers = ["1.1.1.1", "8.8.8.8", "9.9.9.9", "208.67.222.222", "132.230.201.111", "132.230.200.200"]
      - timeout = 15
      - domains = ["mm01.bwcloud.uni-freiburg.de", "api01.fr.bw-cloud.org", "portal.bw-cloud.org", "idm01.bw-cloud.org"]
      - record_type = "A"
      - interval = "15m"

galaxy_test_name: bwcloud-scope
galaxy_nagios_urls:
  ftp_tests: []
  ftp_age_tests: []

  http_tests:
    - name: monitoring
      url: "https://mon01.bwcloud.uni-freiburg.de/"
      code: 200
    - name: home_redir
      url: "https://portal.bw-cloud.org"
      code: 302
    - name: home
      url: "https://portal.bw-cloud.org/auth/login/?next=/"
      code: 200
    - name: api
      url: "https://idm01.bw-cloud.org:5000"
      code: 200
